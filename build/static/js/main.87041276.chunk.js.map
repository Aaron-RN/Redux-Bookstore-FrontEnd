{"version":3,"sources":["assets/images/redux.svg","assets/images/reactRedux.svg","assets/images/logo.svg","actions/index.js","reducers/books.js","reducers/filter.js","reducers/loading.js","reducers/genres.js","reducers/modal.js","reducers/index.js","components/Books.js","constants/categories.js","components/CategoryFilter.js","containers/BookList.js","containers/BooksForm.js","components/Comments.js","containers/Modal.js","App.js","index.js"],"names":["module","exports","URL","fetchRequestSuccess","response","type","fetchRequestFailure","refreshModal","selectedObject","bookReducer","state","action","book","filter","id","comments","comment","sort","a","b","filterReducer","genre","loaderReducer","isLoading","errors","genresReducer","modalReducer","showModal","modalType","rootReducer","combineReducers","books","booksReducer","genres","status","modal","Books","removeBookFromList","toggleModal","percentage","Math","floor","random","piePercent","round","className","key","title","author","onClick","disabled","categories","allCategories","CategoryFilter","changeFilter","selectCat","React","useRef","ref","name","placeholder","onChange","current","value","map","category","BookList","filteredBooks","renderMain","src","Logo","alt","reduxLogo","reactLogo","defaultProps","connect","dispatch","axios","delete","then","data","message","removeBook","catch","error","BooksForm","props","handleChange","bind","handleSubmit","selectForm","createRef","e","this","setState","target","addBookToList","preventDefault","reset","scrollIntoView","behavior","errorDiv","onSubmit","Component","post","newBook","createBook","Comments","removeCommentFromBook","body","Modal","addCommentToBook","removeComment","get","newComment","createComment","App","store","createStore","applyMiddleware","thunk","statusText","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87041276.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/redux.13ba06f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/reactRedux.93e2b00d.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.dae07a07.svg\";","import axios from 'axios';\n\nconst URL = 'https://arn-bookstore-backend.herokuapp.com/';\n\nconst FETCH_REQUEST = 'FETCH_REQUEST';\nconst FETCH_REQUEST_SUCCESS = 'FETCH_REQUEST_SUCCESS';\nconst FETCH_REQUEST_FAILURE = 'FETCH_REQUEST_FAILURE';\nconst FETCH_BOOKLIST = 'FETCH_BOOKLIST';\nconst FETCH_GENRES = 'FETCH_GENRES';\nconst CREATE_GENRE = 'CREATE_GENRE';\nconst REMOVE_GENRE = 'REMOVE_GENRE';\nconst CREATE_COMMENT = 'CREATE_COMMENT';\nconst REMOVE_COMMENT = 'REMOVE_COMMENT';\nconst CREATE_BOOK = 'CREATE_BOOK';\nconst REMOVE_BOOK = 'REMOVE_BOOK';\nconst CHANGE_FILTER = 'CHANGE_FILTER';\nconst TOGGLE_MODAL = 'TOGGLE_MODAL';\nconst REFRESH_MODAL = 'REFRESH_MODAL';\n\nconst fetchRequest = () => ({\n  type: FETCH_REQUEST,\n});\n\nconst fetchRequestSuccess = response => ({\n  type: FETCH_REQUEST_SUCCESS,\n  response,\n});\nconst fetchRequestFailure = response => ({\n  type: FETCH_REQUEST_FAILURE,\n  response,\n});\n\nconst fetchBookListSuccess = books => ({\n  type: FETCH_BOOKLIST,\n  response: books,\n});\n\nconst fetchGenresSuccess = genres => ({\n  type: FETCH_GENRES,\n  response: genres,\n});\n\nconst createBook = book => ({\n  type: CREATE_BOOK,\n  book,\n});\n\nconst removeBook = book => ({\n  type: REMOVE_BOOK,\n  book,\n});\n\nconst createComment = (book, comment) => ({\n  type: CREATE_COMMENT,\n  book,\n  comment,\n});\n\nconst removeComment = (book, comment) => ({\n  type: REMOVE_COMMENT,\n  book,\n  comment,\n});\n\nconst createGenre = genre => ({\n  type: CREATE_GENRE,\n  genre,\n});\n\nconst removeGenre = genre => ({\n  type: REMOVE_GENRE,\n  genre,\n});\n\nconst changeFilter = genre => ({\n  type: CHANGE_FILTER,\n  genre,\n});\n\nconst toggleModal = (modalType, selectedObject) => ({\n  type: TOGGLE_MODAL,\n  modalType,\n  selectedObject,\n});\n\nconst refreshModal = selectedObject => ({\n  type: REFRESH_MODAL,\n  selectedObject,\n});\n\n\n// Asyncronous Requests to Backend API\n\n// BookList Populate List\nconst fetchBookList = () => dispatch => {\n  dispatch(fetchRequest());\n  axios.get(`${URL}`)\n    .then(response => {\n      dispatch(fetchRequestSuccess(response.statusText));\n      dispatch(fetchBookListSuccess(response.data));\n    })\n    .catch(error => {\n      dispatch(fetchRequestFailure(error.response.data.error));\n    });\n};\n\n// Genres Populate List\nconst fetchGenres = () => dispatch => {\n  dispatch(fetchRequest());\n  axios.get(`${URL}api/v1/genre`)\n    .then(response => {\n      dispatch(fetchRequestSuccess(response.statusText));\n      dispatch(fetchGenresSuccess(response.data));\n    })\n    .catch(error => {\n      dispatch(fetchRequestFailure(error.response.data.error));\n    });\n};\n\n// Book requests\nconst addBookToList = book => dispatch => {\n  dispatch(fetchRequest());\n  axios.post(`${URL}api/v1/books`, {\n    title: book.title,\n    author: book.author,\n    genre: book.genre,\n  })\n    .then(response => {\n      const newBook = response.data;\n      dispatch(fetchRequestSuccess(response.data.message));\n      dispatch(createBook(newBook.data));\n    })\n    .catch(error => {\n      dispatch(fetchRequestFailure(error.response.data.error));\n    });\n};\n\nconst removeBookFromList = book => dispatch => {\n  dispatch(fetchRequest());\n  axios.delete(`${URL}api/v1/books/${book.id}`)\n    .then(response => {\n      dispatch(fetchRequestSuccess(response.data.message));\n      dispatch(removeBook(book));\n    })\n    .catch(error => {\n      dispatch(fetchRequestFailure(error.response.data.error));\n    });\n};\n\n// Comments requests\nconst addCommentToBook = (book, comment) => dispatch => {\n  dispatch(fetchRequest());\n  axios.post(`${URL}api/v1/books/${book.id}/comments`, {\n    body: comment,\n  })\n    .then(response => {\n      const newComment = response.data.data;\n      dispatch(fetchRequestSuccess(response.data.message));\n      dispatch(createComment(book, newComment));\n      dispatch(fetchRequest());\n      axios.get(`${URL}api/v1/books/${book.id}`)\n        .then(response => {\n          const newBook = response.data.data;\n          dispatch(fetchRequestSuccess(response.data.message));\n          dispatch(refreshModal(newBook));\n        })\n        .catch(error => {\n          dispatch(fetchRequestFailure(error.response.data.error));\n        });\n    })\n    .catch(error => {\n      dispatch(fetchRequestFailure(error.response.data.error));\n    });\n};\n\nconst removeCommentFromBook = (book, comment) => dispatch => {\n  dispatch(fetchRequest());\n  axios.delete(`${URL}api/v1/books/${book.id}/comments/${comment.id}`)\n    .then(response => {\n      dispatch(fetchRequestSuccess(response.data.message));\n      dispatch(removeComment(book, comment));\n      axios.get(`${URL}api/v1/books/${book.id}`)\n        .then(response => {\n          const newBook = response.data.data;\n          dispatch(fetchRequestSuccess(response.data.message));\n          dispatch(refreshModal(newBook));\n        })\n        .catch(error => {\n          dispatch(fetchRequestFailure(error.response.data.error));\n        });\n    })\n    .catch(error => {\n      dispatch(fetchRequestFailure(error.response.data.error));\n    });\n};\n\n// Genres requests\nconst addGenreToDB = genre => dispatch => {\n  dispatch(fetchRequest());\n  axios.post(`${URL}api/v1/genre`, {\n    name: genre,\n  })\n    .then(response => {\n      dispatch(fetchRequestSuccess(response.data.message));\n      dispatch(createGenre(genre));\n    })\n    .catch(error => {\n      dispatch(fetchRequestFailure(error.response.data.error));\n    });\n};\n\nconst removeGenreFromDB = genre => dispatch => {\n  dispatch(fetchRequest());\n  axios.delete(`${URL}api/v1/genre/${genre.id}`)\n    .then(response => {\n      dispatch(fetchRequestSuccess(response.data.message));\n      dispatch(removeGenre(genre));\n    })\n    .catch(error => {\n      dispatch(fetchRequestFailure(error.response.data.error));\n    });\n};\n\nexport {\n  CREATE_BOOK, REMOVE_BOOK, CHANGE_FILTER, FETCH_BOOKLIST,\n  FETCH_GENRES, CREATE_GENRE, REMOVE_GENRE, CREATE_COMMENT, REMOVE_COMMENT,\n  FETCH_REQUEST, FETCH_REQUEST_SUCCESS, FETCH_REQUEST_FAILURE,\n  TOGGLE_MODAL, REFRESH_MODAL,\n  changeFilter, addBookToList, removeBookFromList,\n  fetchBookList, fetchGenres, addGenreToDB, removeGenreFromDB,\n  addCommentToBook, removeCommentFromBook,\n  toggleModal, refreshModal,\n};\n","import {\n  CREATE_BOOK, REMOVE_BOOK, FETCH_BOOKLIST,\n  CREATE_COMMENT, REMOVE_COMMENT,\n} from '../actions/index';\n\nconst bookReducer = (state = [], action) => {\n  switch (action.type) {\n    case FETCH_BOOKLIST:\n      return [...action.response];\n    case CREATE_BOOK:\n      return [...state, action.book];\n    case REMOVE_BOOK:\n      return state.filter(book => book.id !== action.book.id);\n    case CREATE_COMMENT:\n      return [...state.filter(book => book.id !== action.book.id),\n        {\n          ...action.book,\n          comments: [...action.book.comments, action.comment],\n        }].sort((a, b) => a.id - b.id);\n    case REMOVE_COMMENT:\n      return [...state.filter(book => book.id !== action.book.id),\n        {\n          ...action.book,\n          comments: [...action.book.comments.filter(comment => comment.id !== action.comment.id)],\n        }].sort((a, b) => a.id - b.id);\n    default:\n      return state;\n  }\n};\n\nexport default bookReducer;\n","import { CHANGE_FILTER } from '../actions/index';\r\n\r\nconst filterReducer = (state = 'All', action) => {\r\n  switch (action.type) {\r\n    case CHANGE_FILTER:\r\n      return action.genre;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filterReducer;\r\n","import { FETCH_REQUEST, FETCH_REQUEST_SUCCESS, FETCH_REQUEST_FAILURE } from '../actions/index';\n\nconst loaderReducer = (state = { isLoading: false, errors: '' }, action) => {\n  switch (action.type) {\n    case FETCH_REQUEST:\n      return {\n        isLoading: true,\n        errors: [],\n      };\n    case FETCH_REQUEST_SUCCESS:\n      return {\n        isLoading: false,\n        errors: [],\n      };\n    case FETCH_REQUEST_FAILURE:\n      return {\n        isLoading: false,\n        errors: action.response,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default loaderReducer;\n","import { CREATE_GENRE, REMOVE_GENRE, FETCH_GENRES } from '../actions/index';\n\nconst genresReducer = (state = [], action) => {\n  switch (action.type) {\n    case FETCH_GENRES:\n      return [...action.response];\n    case CREATE_GENRE:\n      return [...state, action.genre];\n    case REMOVE_GENRE:\n      return state.filter(genre => genre !== action.genre);\n    default:\n      return state;\n  }\n};\n\nexport default genresReducer;\n","import { TOGGLE_MODAL, REFRESH_MODAL } from '../actions/index';\n\nconst modalReducer = (state = { showModal: false, type: 'comments', selectedObject: null }, action) => {\n  switch (action.type) {\n    case TOGGLE_MODAL:\n      return {\n        showModal: !state.showModal,\n        type: action.modalType,\n        selectedObject: action.selectedObject,\n      };\n    case REFRESH_MODAL:\n      return { ...state, selectedObject: action.selectedObject };\n    default:\n      return state;\n  }\n};\n\nexport default modalReducer;\n","import { combineReducers } from 'redux';\nimport booksReducer from './books';\nimport filterReducer from './filter';\nimport loaderReducer from './loading';\nimport genresReducer from './genres';\nimport modalReducer from './modal';\n\nconst rootReducer = combineReducers({\n  books: booksReducer,\n  genres: genresReducer,\n  filter: filterReducer,\n  status: loaderReducer,\n  modal: modalReducer,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Books = ({ book, removeBookFromList, toggleModal }) => {\n  const percentage = Math.floor(Math.random() * 100);\n  const piePercent = Math.round(percentage / 25) * 25;\n  return (\n    <div className=\"book\" key={book.id}>\n      <div id=\"left\">\n        <h5 className=\"category font-header\">{book.genre}</h5>\n        <h2 className=\"title font-header\">{book.title}</h2>\n        <h4 className=\"author\">{book.author}</h4>\n        <div className=\"actions\">\n          <button type=\"button\" onClick={() => toggleModal('comments', book)}>Comments</button>\n          <button type=\"button\" onClick={() => removeBookFromList(book)}>\n            Remove Book\n          </button>\n          <button type=\"button\" disabled>Edit</button>\n        </div>\n      </div>\n      <div id=\"center\">\n        <div className={`pie-graph-${piePercent}`} />\n        <div className=\"percent\">\n          <h1 className=\"percentage\">\n            {percentage}\n            %\n          </h1>\n          <h4 className=\"completed\">Completed</h4>\n        </div>\n      </div>\n      <div id=\"right\">\n        <div className=\"current all-caps\">Current Chapter</div>\n        <div className=\"chapter\">Chapter 11</div>\n        <button type=\"button\">Update Progress</button>\n      </div>\n    </div>\n  );\n};\n\nBooks.propTypes = {\n  book: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    author: PropTypes.string,\n    genre: PropTypes.string,\n    comments: PropTypes.instanceOf(Array),\n  }).isRequired,\n  removeBookFromList: PropTypes.func.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n};\n\nexport default Books;\n","export const categories = [\r\n  'Action',\r\n  'Biography',\r\n  'History',\r\n  'Horror',\r\n  'Kids',\r\n  'Learning',\r\n  'Sci-Fi',\r\n];\r\n\r\nexport const allCategories = [\r\n  'All', ...categories,\r\n];\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../assets/css/CategoryFilter.css';\nimport { allCategories } from '../constants/categories';\n\nconst CategoryFilter = ({\n  changeFilter,\n}) => {\n  const selectCat = React.useRef(null);\n  return (\n    <div>\n      <select ref={selectCat} name=\"category\" placeholder=\"Category\" onChange={() => changeFilter(selectCat.current.value)}>\n        {allCategories.map(category => (\n          <option key={category}>{category}</option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nCategoryFilter.propTypes = {\n  changeFilter: PropTypes.func.isRequired,\n};\n\nexport default CategoryFilter;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Book from '../components/Books';\nimport { removeBookFromList, changeFilter, toggleModal } from '../actions/index';\nimport CategoryFilter from '../components/CategoryFilter';\nimport '../assets/css/BookList.css';\nimport Logo from '../assets/images/reactRedux.svg';\nimport reactLogo from '../assets/images/logo.svg';\nimport reduxLogo from '../assets/images/redux.svg';\n\nconst BookList = ({\n  books, filter, status, removeBookFromList, changeFilter, toggleModal,\n}) => {\n  const filteredBooks = (filter !== 'All') ? books.filter(book => book.genre === filter) : books;\n\n  const { isLoading } = status;\n  const renderMain = isLoading\n    ? (\n      <div className=\"text-center\">\n        <div className=\"loader center\" />\n        <h1 className=\"text-white\">Loading...</h1>\n      </div>\n    )\n    : (\n      <div className=\"center max-width-90 bookSection\">\n        {filteredBooks.map(book => (\n          <Book\n            book={book}\n            key={book.id + book.title}\n            removeBookFromList={removeBookFromList}\n            toggleModal={toggleModal}\n          />\n        ))}\n      </div>\n    );\n  return (\n    <div>\n      <header className=\"m-b bg-header round-top\">\n        <div className=\"center max-width-90 flex-row\">\n          <h1 className=\"app-title\">\n            Bookstore CMS\n          </h1>\n          <div className=\"cat-title\">\n            <span className=\"text-grey\">Books</span>\n          </div>\n          <div className=\"categories text-center\">\n            <span className=\"text-grey\">Genres</span>\n            <CategoryFilter changeFilter={changeFilter} />\n          </div>\n          <img className=\"logo show-sm\" src={Logo} alt=\"react-redux logo\" />\n          <img className=\"logo show-md\" src={reduxLogo} alt=\"redux logo\" />\n          <div className=\"logo-container hide-sm hide-md\">\n            <img className=\"logo\" src={reactLogo} alt=\"react logo\" />\n            <img className=\"logo\" src={reduxLogo} alt=\"redux logo\" />\n          </div>\n        </div>\n      </header>\n      <main className=\"bg-main\">\n        {renderMain}\n      </main>\n    </div>\n  );\n};\n\nBookList.defaultProps = {\n  filter: 'All',\n};\n\nBookList.propTypes = {\n  books: PropTypes.instanceOf(Array).isRequired,\n  filter: PropTypes.string,\n  status: PropTypes.instanceOf(Object).isRequired,\n  removeBookFromList: PropTypes.func.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  books: state.books,\n  filter: state.filter,\n  status: state.status,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeBookFromList: book => {\n    dispatch(removeBookFromList(book));\n  },\n  changeFilter: category => {\n    dispatch(changeFilter(category));\n  },\n  toggleModal: (modalType, selectedObject) => {\n    dispatch(toggleModal(modalType, selectedObject));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addBookToList } from '../actions/index';\nimport '../assets/css/BookForm.css';\nimport { categories } from '../constants/categories';\n\n\nclass BooksForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // id: Math.floor(Math.random() * 1000),\n      title: '',\n      author: '',\n      genre: categories[0],\n      comments: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.selectForm = React.createRef();\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  handleSubmit(e) {\n    const { addBookToList } = this.props;\n    e.preventDefault();\n    addBookToList(this.state);\n    this.reset();\n  }\n\n  reset() {\n    this.selectForm.current.scrollIntoView({ behavior: 'smooth' });\n    this.setState({\n      // id: Math.floor(Math.random() * 1000),\n      title: '',\n      author: '',\n      genre: categories[0],\n      comments: [],\n    });\n  }\n\n  render() {\n    const { title, author, genre } = this.state;\n    const { status, genres } = this.props;\n    const { errors } = status;\n    const errorDiv = error => (\n      <div key={error}>\n        {error}\n      </div>\n    );\n    return (\n      <div className=\"bg-header round-bottom box-shadow\">\n        <div className=\"center max-width-90 border-top\">\n          <div className=\"formTitle\">Add New Book</div>\n          <div className=\"errors\">\n            {errors.map(error => errorDiv(error))}\n          </div>\n          <form ref={this.selectForm} onSubmit={this.handleSubmit} className=\"bookForm\">\n            <div>\n              <input\n                placeholder=\"Book Title\"\n                name=\"title\"\n                type=\"text\"\n                value={title}\n                onChange={this.handleChange}\n              />\n              <input\n                placeholder=\"Book Author\"\n                name=\"author\"\n                type=\"text\"\n                value={author}\n                onChange={this.handleChange}\n              />\n            </div>\n            <select className=\"font-header\" name=\"genre\" placeholder=\"Genre\" value={genre} onChange={this.handleChange}>\n              {genres.map(category => (\n                <option key={category}>{category}</option>\n              ))}\n            </select>\n            <button type=\"submit\">Add Book</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nBooksForm.propTypes = {\n  status: PropTypes.instanceOf(Object).isRequired,\n  genres: PropTypes.instanceOf(Array).isRequired,\n  addBookToList: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  status: state.status,\n  genres: state.genres,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addBookToList: book => {\n    dispatch(addBookToList(book));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comments = ({ book, comment, removeCommentFromBook }) => {\n  return (\n    <div>\n      <div>\n        {comment.body}\n      </div>\n      <button type=\"button\" onClick={() => removeCommentFromBook(book, comment)}>Remove</button>\n    </div>\n  );\n};\n\nComments.defaultProps = {\n  comment: [],\n};\n\nComments.propTypes = {\n  book: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    author: PropTypes.string,\n    genre: PropTypes.string,\n    comments: PropTypes.instanceOf(Array),\n  }).isRequired,\n  comment: PropTypes.instanceOf(Object),\n  removeCommentFromBook: PropTypes.func.isRequired,\n};\n\nexport default Comments;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Comment from '../components/Comments';\nimport { addCommentToBook, removeCommentFromBook, refreshModal } from '../actions/index';\nimport '../assets/css/modal.css';\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comment: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  handleSubmit(e) {\n    const { addCommentToBook, modal, refreshModal, books } = this.props;\n    const { selectedObject } = modal;\n    const { comment } = this.state;\n    e.preventDefault();\n    addCommentToBook(selectedObject, comment);\n    // const newObject = books.filter(book => book.id === selectedObject.id)[0];\n    // console.log(newObject);\n    // refreshModal(newObject);\n    this.reset();\n  }\n\n  reset() {\n    this.setState({\n      comment: '',\n    });\n  }\n\n  render() {\n    const { modal, removeCommentFromBook, refreshModal } = this.props;\n    const { selectedObject } = modal;\n    const { comments } = selectedObject;\n    let renderMain;\n    if (modal.type === 'comments' && modal.showModal) {\n      renderMain = (\n        <div className=\"modal\">\n          <div className=\"modalContent\">\n            <header>\n              <div />\n            </header>\n            <main>\n              <h2>{selectedObject.title}</h2>\n              {comments.map(comment => (\n                <Comment\n                  book={selectedObject}\n                  comment={comment}\n                  key={comment.id + selectedObject.title}\n                  removeCommentFromBook={removeCommentFromBook}\n                  refreshModal={refreshModal}\n                />\n              ))}\n            </main>\n            <footer>\n              <input name=\"comment\" type=\"text\" placeholder=\"type comment here...\" onChange={this.handleChange} />\n              <button type=\"button\" onClick={this.handleSubmit}> Comment </button>\n            </footer>\n          </div>\n        </div>\n      );\n    }\n    return modal.showModal ? renderMain : null;\n  }\n}\n\nModal.propTypes = {\n  books: PropTypes.instanceOf(Array).isRequired,\n  modal: PropTypes.instanceOf(Object).isRequired,\n  addCommentToBook: PropTypes.func.isRequired,\n  removeCommentFromBook: PropTypes.func.isRequired,\n  refreshModal: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  books: state.books,\n  modal: state.modal,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeCommentFromBook: (book, comment) => {\n    dispatch(removeCommentFromBook(book, comment));\n  },\n  addCommentToBook: (book, comment) => {\n    dispatch(addCommentToBook(book, comment));\n  },\n  refreshModal: selectedObject => {\n    dispatch(refreshModal(selectedObject));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React from 'react';\nimport BookList from './containers/BookList';\nimport BooksForm from './containers/BooksForm';\nimport Modal from './containers/Modal';\nimport './assets/css/App.css';\n\nconst App = () => (\n  <div className=\"App\">\n    <div className=\"backBG bg-dark\">\n      <div className=\"container center\">\n        <BookList />\n        <BooksForm />\n        <Modal />\n      </div>\n    </div>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport './assets/css/index.css';\n\nimport rootReducer from './reducers/index';\nimport App from './App';\nimport { fetchBookList, fetchGenres } from './actions';\n\nconst initialState = {\n  books: [],\n  genres: ['Action', 'Biography', 'Kids', 'Learning', 'Sci-Fi', 'Horor', 'History'],\n  status: { isLoading: false, errors: [] },\n  modal: { showModal: false, type: 'comments', selectedObject: {} },\n};\n\nconst store = createStore(rootReducer, initialState, applyMiddleware(thunk));\nstore.dispatch(fetchBookList());\nstore.dispatch(fetchGenres());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}