{"version":3,"sources":["assets/images/logo.svg","serviceWorker.js","reducers/books.js","actions/index.js","reducers/filter.js","reducers/index.js","components/Books.js","constants/categories.js","components/CategoryFilter.js","containers/BookList.js","containers/BooksForm.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","bookReducer","state","action","type","book","filter","id","filterReducer","category","rootReducer","combineReducers","books","booksReducer","Books","removeBook","className","key","title","disabled","onClick","categories","allCategories","CategoryFilter","changeFilter","selectCat","React","useRef","ref","name","placeholder","onChange","current","value","map","BookList","filteredBooks","src","logo","alt","defaultProps","connect","dispatch","BooksForm","props","Math","floor","random","handleChange","bind","handleSubmit","e","target","this","setState","createBook","preventDefault","reset","ceil","onSubmit","Component","App","initialState","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.db096bc6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3772899e.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { CREATE_BOOK, REMOVE_BOOK } from '../actions/index';\r\n\r\nconst bookReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case CREATE_BOOK:\r\n      return [...state, action.book];\r\n    case REMOVE_BOOK:\r\n      return state.filter(book => book.id !== action.book.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default bookReducer;\r\n","const CREATE_BOOK = 'CREATE_BOOK';\r\nconst REMOVE_BOOK = 'REMOVE_BOOK';\r\nconst CHANGE_FILTER = 'CHANGE_FILTER';\r\n\r\nconst createBook = book => ({\r\n  type: CREATE_BOOK,\r\n  book,\r\n});\r\n\r\nconst removeBook = book => ({\r\n  type: REMOVE_BOOK,\r\n  book,\r\n});\r\n\r\nconst changeFilter = category => ({\r\n  type: CHANGE_FILTER,\r\n  category,\r\n});\r\n\r\nexport {\r\n  CREATE_BOOK, REMOVE_BOOK, CHANGE_FILTER, createBook, removeBook, changeFilter,\r\n};\r\n","import { CHANGE_FILTER } from '../actions/index';\r\n\r\nconst filterReducer = (state = 'All', action) => {\r\n  switch (action.type) {\r\n    case CHANGE_FILTER:\r\n      return action.category;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filterReducer;\r\n","import { combineReducers } from 'redux';\r\nimport booksReducer from './books';\r\nimport filterReducer from './filter';\r\n\r\nconst rootReducer = combineReducers({\r\n  books: booksReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Books = ({ book, removeBook }) => (\r\n  <div className=\"book\" key={book.id}>\r\n    <div id=\"left\">\r\n      <h5 className=\"category\">{book.category}</h5>\r\n      <h2 className=\"title\">{book.title}</h2>\r\n      <h4 className=\"author\">John Doe</h4>\r\n      <div className=\"actions\">\r\n        <button type=\"button\" disabled>Comments</button>\r\n        <button type=\"button\" onClick={() => removeBook(book)}>\r\n          Remove Book\r\n        </button>\r\n        <button type=\"button\" disabled>Edit</button>\r\n      </div>\r\n    </div>\r\n    <div id=\"center\">\r\n      <div className=\"pie-graph\" />\r\n      <div className=\"percent\">\r\n        <h1 className=\"percentage\">64%</h1>\r\n        <h4 className=\"completed\">Completed</h4>\r\n      </div>\r\n    </div>\r\n    <div id=\"right\">\r\n      <div className=\"current all-caps\">Current Chapter</div>\r\n      <div className=\"chapter\">Chapter 11</div>\r\n      <button type=\"button\">Update Progress</button>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nBooks.propTypes = {\r\n  book: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    title: PropTypes.string,\r\n    category: PropTypes.string,\r\n  }).isRequired,\r\n  removeBook: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Books;\r\n","export const categories = [\r\n  'Action',\r\n  'Biography',\r\n  'History',\r\n  'Horror',\r\n  'Kids',\r\n  'Learning',\r\n  'Sci-Fi',\r\n];\r\n\r\nexport const allCategories = [\r\n  'All', ...categories,\r\n];\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../assets/css/CategoryFilter.css';\r\nimport { allCategories } from '../constants/categories';\r\n\r\nconst CategoryFilter = ({\r\n  changeFilter,\r\n}) => {\r\n  const selectCat = React.useRef(null);\r\n  return (\r\n    <div>\r\n      <select ref={selectCat} name=\"category\" placeholder=\"Category\" onChange={() => changeFilter(selectCat.current.value)}>\r\n        {allCategories.map(category => (\r\n          <option key={category}>{category}</option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nCategoryFilter.propTypes = {\r\n  changeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CategoryFilter;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Book from '../components/Books';\r\nimport { removeBook, changeFilter } from '../actions/index';\r\nimport CategoryFilter from '../components/CategoryFilter';\r\nimport '../assets/css/BookList.css';\r\nimport logo from '../assets/images/logo.svg';\r\n\r\nconst BookList = ({\r\n  books, filter, removeBook, changeFilter,\r\n}) => {\r\n  const filteredBooks = (filter !== 'All') ? books.filter(book => book.category === filter) : books;\r\n  return (\r\n    <div>\r\n      <header className=\"m-b bg-white round-top\">\r\n        <div className=\"center max-width-90 flex-row\">\r\n          <h1 className=\"app-title\">\r\n            Bookstore CMS\r\n          </h1>\r\n          <div className=\"cat-title\">\r\n            <span className=\"text-grey\">Books</span>\r\n          </div>\r\n          <div className=\"categories text-center\">\r\n            <CategoryFilter changeFilter={changeFilter} />\r\n          </div>\r\n          <img className=\"react-logo\" src={logo} alt=\"logo\" />\r\n        </div>\r\n      </header>\r\n      <main className=\"bg-grey\">\r\n        <div className=\"center max-width-90 bookSection\">\r\n          {filteredBooks.map(book => (\r\n            <Book book={book} key={book.id} removeBook={removeBook} />\r\n          ))}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nBookList.defaultProps = {\r\n  filter: 'All',\r\n};\r\n\r\nBookList.propTypes = {\r\n  books: PropTypes.instanceOf(Array).isRequired,\r\n  filter: PropTypes.string,\r\n  removeBook: PropTypes.func.isRequired,\r\n  changeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  books: state.books,\r\n  filter: state.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  removeBook: book => {\r\n    dispatch(removeBook(book));\r\n  },\r\n  changeFilter: category => {\r\n    dispatch(changeFilter(category));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { createBook } from '../actions/index';\r\nimport '../assets/css/BookForm.css';\r\nimport { categories } from '../constants/categories';\r\n\r\n\r\nclass BooksForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: Math.floor(Math.random() * 1000),\r\n      title: '',\r\n      category: categories[0],\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    if (e.target.name === 'title') {\r\n      this.setState({\r\n        title: e.target.value,\r\n      });\r\n    } else if (e.target.name === 'category') {\r\n      this.setState({\r\n        category: e.target.value,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    const { title } = this.state;\r\n    const { createBook } = this.props;\r\n    e.preventDefault();\r\n    if (title) {\r\n      createBook(this.state);\r\n      this.reset();\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.setState({\r\n      id: Math.ceil(Math.random() * 1000),\r\n      title: '',\r\n      category: categories[0],\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { title, category } = this.state;\r\n    return (\r\n      <div className=\"bg-grey round-bottom box-shadow\">\r\n        <div className=\"center max-width-90 border-top\">\r\n          <div className=\"formTitle\">Add New Book</div>\r\n          <form onSubmit={this.handleSubmit} className=\"bookForm\">\r\n            <input\r\n              placeholder=\"Book Title\"\r\n              name=\"title\"\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={this.handleChange}\r\n            />\r\n            <select name=\"category\" placeholder=\"Category\" value={category} onChange={this.handleChange}>\r\n              {categories.map(category => (\r\n                <option key={category}>{category}</option>\r\n              ))}\r\n            </select>\r\n            <button type=\"submit\">Add Book</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBooksForm.propTypes = {\r\n  createBook: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  createBook: book => {\r\n    dispatch(createBook(book));\r\n  },\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(BooksForm);\r\n","import React from 'react';\r\nimport BookList from './containers/BookList';\r\nimport BooksForm from './containers/BooksForm';\r\nimport './assets/css/App.css';\r\n\r\nconst App = () => (\r\n  <div className=\"App\">\r\n    <div className=\"backBG bg-dark-grey\">\r\n      <div className=\"container center\">\r\n        <BookList />\r\n        <BooksForm />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport './assets/css/index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport rootReducer from './reducers/index';\r\nimport App from './App';\r\n\r\nconst initialState = {\r\n  books: [\r\n    {\r\n      id: Math.floor(Math.random() * 1000),\r\n      title: 'Angels and Demons',\r\n      category: 'Action',\r\n    },\r\n    {\r\n      id: Math.floor(Math.random() * 1000),\r\n      title: 'Angel',\r\n      category: 'Horror',\r\n    },\r\n    {\r\n      id: Math.floor(Math.random() * 1000),\r\n      title: 'Buffy The Vampire Slayer',\r\n      category: 'Sci-Fi',\r\n    },\r\n  ],\r\n};\r\n\r\nconst store = createStore(rootReducer, initialState);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}